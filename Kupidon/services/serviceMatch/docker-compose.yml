services:
  postgresMatch:
    image: postgres:latest
    container_name: postgres_match_container
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "070823"
      POSTGRES_DB: "match"
    ports:
      - "5433:5432"
    volumes:
      - postgres-data-match:/var/lib/postgresql/data
    networks:
      - backend2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - backend2

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_container
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend2

  serviceMatch:
    image: service_match:latest
    container_name: serviceMatch
    ports:
      - "8081:8081"
    depends_on:
      - postgresMatch
      - kafka
    environment:
      SERVICE_MATCH: ":8081"
      DATABASE_URL: "postgres://postgres:070823@postgresMatch:5432/match?sslmode=disable"
      KAFKA_URL: "kafka:9092"
      KAFKA_LIKE_TOPIC: "likes-topic"
    networks:
      - backend2
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  backend2:
    external: true

volumes:
  postgres-data-match:
